<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sahana Restaurant - Order Management</title>
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- DataTables CSS -->
  <link href="https://cdn.datatables.net/1.13.1/css/dataTables.bootstrap5.min.css" rel="stylesheet">
  <!-- Custom CSS -->
  <style>
    :root {
      --primary: #e8505b;
      --secondary: #f9a03f;
      --accent: #2196F3;
      --success: #4CAF50;
      --warning: #FF9800;
      --danger: #F44336;
      --dark: #222831;
      --light: #f9f9f9;
      --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
      --transition: all 0.3s ease;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #f5f7fa;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cg fill='%232196f3' fill-opacity='0.03'%3E%3Cpath fill-rule='evenodd' d='M0 0h40v40H0V0zm40 40h40v40H40V40zm0-40h2l-2 2V0zm0 4l4-4h2l-6 6V4zm0 4l8-8h2L40 10V8zm0 4L52 0h2L40 14v-2zm0 4L56 0h2L40 18v-2zm0 4L60 0h2L40 22v-2zm0 4L64 0h2L40 26v-2zm0 4L68 0h2L40 30v-2zm0 4L72 0h2L40 34v-2zm0 4L76 0h2L40 38v-2zm0 4L80 0v2L42 40h-2zm4 0L80 4v2L46 40h-2zm4 0L80 8v2L50 40h-2zm4 0l28-28v2L54 40h-2zm4 0l24-24v2L58 40h-2zm4 0l20-20v2L62 40h-2zm4 0l16-16v2L66 40h-2zm4 0l12-12v2L70 40h-2zm4 0l8-8v2l-6 6h-2zm4 0l4-4v2l-2 2h-2z'/%3E%3C/g%3E%3C/svg%3E");
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
    }
    
    /* Navbar Styles */
    .admin-navbar {
      background: linear-gradient(135deg, var(--accent), #1565c0);
      padding: 15px 0;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      z-index: 1000;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      transition: var(--transition);
    }
    
    .admin-navbar.scrolled {
      padding: 10px 0;
    }
    
    .navbar-container {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 20px;
    }
    
    .navbar-brand {
      display: flex;
      align-items: center;
      text-decoration: none;
    }
    
    .brand-logo {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 10px;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
    }
    
    .brand-icon {
      color: var(--accent);
      font-size: 20px;
    }
    
    .brand-name {
      font-family: 'Playfair Display', serif;
      font-weight: 700;
      color: white;
      margin: 0;
      font-size: 1.5rem;
      position: relative;
    }
    
    .brand-name::after {
      content: 'ADMIN';
      position: absolute;
      top: -10px;
      right: -15px;
      font-family: 'Poppins', sans-serif;
      font-size: 0.6rem;
      background-color: white;
      color: var(--accent);
      padding: 2px 6px;
      border-radius: 10px;
      letter-spacing: 1px;
      font-weight: 700;
    }
    
    .navbar-actions {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    
    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 8px 20px;
      background-color: white;
      color: var(--accent);
      border: none;
      border-radius: 30px;
      font-weight: 600;
      font-size: 0.9rem;
      transition: var(--transition);
      text-decoration: none;
    }
    
    .back-btn:hover {
      background: var(--primary);
      color: white;
      transform: translateY(-3px);
      box-shadow: 0 5px 15px rgba(232, 80, 91, 0.3);
    }
    
    /* Page Header */
    .page-header {
      background: white;
      padding: 30px;
      border-radius: 15px;
      box-shadow: var(--box-shadow);
      margin-bottom: 30px;
      position: relative;
      overflow: hidden;
    }
    
    .header-bg {
      position: absolute;
      top: 0;
      right: 0;
      width: 30%;
      height: 100%;
      background: linear-gradient(135deg, rgba(33, 150, 243, 0.1), rgba(33, 150, 243, 0.05));
      clip-path: polygon(100% 0, 0% 0, 100% 100%);
    }
    
    .page-title {
      font-family: 'Playfair Display', serif;
      font-weight: 700;
      font-size: 2.5rem;
      color: var(--dark);
      margin-bottom: 10px;
      position: relative;
    }
    
    .page-title::after {
      content: '';
      position: absolute;
      bottom: -10px;
      left: 0;
      width: 60px;
      height: 3px;
      background: linear-gradient(90deg, var(--accent), var(--primary));
      border-radius: 3px;
    }
    
    .breadcrumb-container {
      display: flex;
      align-items: center;
      margin-top: 20px;
    }
    
    .breadcrumb {
      display: flex;
      align-items: center;
      gap: 8px;
      list-style: none;
      margin: 0;
      padding: 0;
    }
    
    .breadcrumb-item {
      display: flex;
      align-items: center;
      color: #777;
      font-size: 0.9rem;
    }
    
    .breadcrumb-item:not(:last-child)::after {
      content: '/';
      margin-left: 8px;
      color: #ccc;
    }
    
    .breadcrumb-item a {
      color: var(--accent);
      text-decoration: none;
      transition: var(--transition);
    }
    
    .breadcrumb-item a:hover {
      color: var(--primary);
    }
    
    .breadcrumb-item.active {
      color: #555;
      font-weight: 500;
    }
    
    /* Filter Section */
    .filter-section {
      background: white;
      padding: 20px;
      border-radius: 15px;
      box-shadow: var(--box-shadow);
      margin-bottom: 30px;
    }
    
    .filter-title {
      font-family: 'Playfair Display', serif;
      font-weight: 600;
      font-size: 1.25rem;
      color: var(--dark);
      margin-bottom: 15px;
    }
    
    .filter-options {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
    }
    
    .custom-radio {
      --radio-size: 20px;
      position: relative;
      padding-left: 35px;
      cursor: pointer;
      user-select: none;
      display: inline-flex;
      align-items: center;
      transition: var(--transition);
    }
    
    .custom-radio:hover {
      color: var(--accent);
    }
    
    .custom-radio input {
      position: absolute;
      opacity: 0;
      cursor: pointer;
    }
    
    .checkmark {
      position: absolute;
      top: 0;
      left: 0;
      height: var(--radio-size);
      width: var(--radio-size);
      background-color: #eee;
      border-radius: 50%;
      transition: var(--transition);
    }
    
    .custom-radio:hover input ~ .checkmark {
      background-color: #ccc;
    }
    
    .custom-radio input:checked ~ .checkmark {
      background-color: var(--accent);
    }
    
    .checkmark:after {
      content: "";
      position: absolute;
      display: none;
    }
    
    .custom-radio input:checked ~ .checkmark:after {
      display: block;
    }
    
    .custom-radio .checkmark:after {
      top: 6px;
      left: 6px;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: white;
    }
    
    .filter-label {
      font-weight: 500;
      color: #444;
    }
    
    .all-filter .checkmark {
      border: 2px solid var(--accent);
    }
    
    .pending-filter .checkmark {
      border: 2px solid var(--warning);
    }
    
    .pending-filter input:checked ~ .checkmark {
      background-color: var(--warning);
    }
    
    .completed-filter .checkmark {
      border: 2px solid var(--success);
    }
    
    .completed-filter input:checked ~ .checkmark {
      background-color: var(--success);
    }
    
    /* Orders Section */
    .orders-container {
      margin-bottom: 40px;
    }
    
    .order-card {
      background: white;
      border-radius: 15px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.05);
      overflow: hidden;
      margin-bottom: 25px;
      transition: var(--transition);
      border-top: 5px solid transparent;
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
      max-height: 2000px;
    }
    
    .order-card[data-status="Pending"] {
      border-top-color: var(--warning);
    }
    
    .order-card[data-status="Completed"] {
      border-top-color: var(--success);
    }
    
    .order-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 15px 30px rgba(0,0,0,0.1);
    }
    
    .order-card.filtered-out {
      transform: translateY(20px);
      opacity: 0;
      visibility: hidden;
      max-height: 0;
      margin: 0;
      padding: 0;
      transition: transform 0.3s ease, opacity 0.3s ease, visibility 0.3s ease, max-height 0.5s ease, margin 0.5s ease, padding 0.5s ease;
    }
    
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px;
      border-bottom: 1px solid rgba(0,0,0,0.05);
    }
    
    .order-id {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .table-badge {
      background: linear-gradient(135deg, var(--accent), #1565c0);
      color: white;
      padding: 8px 15px;
      border-radius: 30px;
      font-weight: 600;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      gap: 5px;
    }
    
    .order-title {
      font-family: 'Playfair Display', serif;
      font-weight: 600;
      font-size: 1.3rem;
      color: var(--dark);
      margin: 0;
    }
    
    .order-timestamp {
      color: #777;
      font-size: 0.85rem;
      display: flex;
      align-items: center;
      gap: 5px;
    }
    
    .card-body {
      padding: 20px;
    }
    
    .order-meta {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 20px;
      padding-bottom: 15px;
      border-bottom: 1px dashed rgba(0,0,0,0.1);
    }
    
    .meta-item {
      display: flex;
      flex-direction: column;
      gap: 5px;
    }
    
    .meta-label {
      font-size: 0.8rem;
      color: #888;
      font-weight: 500;
    }
    
    .meta-value {
      font-weight: 600;
      color: #444;
    }
    
    .status-badge {
      display: inline-flex;
      align-items: center;
      gap: 5px;
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 0.85rem;
      font-weight: 600;
    }
    
    .status-pending {
      background-color: rgba(255, 152, 0, 0.15);
      color: var(--warning);
    }
    
    .status-completed {
      background-color: rgba(76, 175, 80, 0.15);
      color: var(--success);
    }
    
    .order-items {
      margin-top: 20px;
    }
    
    .item-list-title {
      font-family: 'Playfair Display', serif;
      font-weight: 600;
      font-size: 1.1rem;
      color: var(--dark);
      margin-bottom: 15px;
      padding-bottom: 10px;
      border-bottom: 1px solid rgba(0,0,0,0.05);
    }
    
    .item-list {
      max-height: 250px;
      overflow-y: auto;
      padding-right: 10px;
    }
    
    .item-list::-webkit-scrollbar {
      width: 6px;
    }
    
    .item-list::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }
    
    .item-list::-webkit-scrollbar-thumb {
      background: #ccc;
      border-radius: 10px;
    }
    
    .item-list::-webkit-scrollbar-thumb:hover {
      background: #aaa;
    }
    
    .order-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px 0;
      border-bottom: 1px solid rgba(0,0,0,0.05);
    }
    
    .item-details {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    
    .food-type-indicator {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      display: inline-block;
    }
    
    .food-type-veg {
      background-color: var(--success);
    }
    
    .food-type-nonveg {
      background-color: var(--danger);
    }
    
    .item-name {
      font-weight: 500;
      color: #444;
    }
    
    .item-price {
      font-weight: 600;
      color: var(--dark);
    }
    
    .order-total {
      background-color: rgba(0,0,0,0.02);
      padding: 15px 20px;
      border-radius: 8px;
      margin-top: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .total-label {
      font-weight: 600;
      color: #555;
      font-size: 1rem;
    }
    
    .total-amount {
      font-weight: 700;
      color: var(--accent);
      font-size: 1.2rem;
    }
    
    /* Empty state */
    .empty-state {
      text-align: center;
      background-color: white;
      padding: 50px 20px;
      border-radius: 15px;
      box-shadow: var(--box-shadow);
    }
    
    .empty-icon {
      font-size: 3rem;
      color: #ccc;
      margin-bottom: 20px;
    }
    
    .empty-title {
      font-family: 'Playfair Display', serif;
      font-weight: 600;
      font-size: 1.5rem;
      color: #555;
      margin-bottom: 10px;
    }
    
    .empty-description {
      color: #777;
      max-width: 400px;
      margin: 0 auto;
    }
    
    /* Bottom navigation */
    .bottom-nav {
      margin-top: 40px;
      display: flex;
      justify-content: center;
    }
    
    /* Floating action button */
    .floating-action {
      position: fixed;
      bottom: 30px;
      right: 30px;
      width: 60px;
      height: 60px;
      border-radius: 50%;
      background: linear-gradient(135deg, var(--accent), #1565c0);
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 5px 15px rgba(33, 150, 243, 0.4);
      cursor: pointer;
      z-index: 10;
      transition: var(--transition);
    }
    
    .floating-action:hover {
      transform: scale(1.1) rotate(90deg);
      background: linear-gradient(135deg, var(--primary), var(--secondary));
    }
    
    .floating-icon {
      font-size: 1.5rem;
    }
    
    /* Ripple effect for buttons */
    .ripple {
      position: relative;
      overflow: hidden;
    }
    
    .ripple:after {
      content: "";
      background: rgba(255, 255, 255, 0.3);
      display: block;
      position: absolute;
      border-radius: 50%;
      transform: scale(0);
      transition: transform 0.5s;
    }
    
    .ripple:active:after {
      transform: scale(4);
      opacity: 0;
    }
    
    /* Animation for card appearance */
    .fade-in-up {
      animation: fadeInUp 0.5s ease-out forwards;
      opacity: 0;
    }
    
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    /* Responsive adjustments */
    @media (max-width: 991px) {
      .page-title {
        font-size: 2rem;
      }
    }
    
    @media (max-width: 767px) {
      .navbar-container {
        flex-direction: column;
        gap: 10px;
        padding: 10px 20px;
      }
      
      .navbar-actions {
        margin-top: 10px;
      }
      
      .page-title {
        font-size: 1.8rem;
      }
      
      .card-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }
      
      body {
        padding-top: 120px;
      }
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <nav class="admin-navbar" id="adminNavbar">
    <div class="container">
      <div class="navbar-container">
        <a href="/" class="navbar-brand">
          <div class="brand-logo">
            <i class="fas fa-utensils brand-icon"></i>
          </div>
          <h1 class="brand-name">Sahana Restaurant</h1>
        </a>
        <div class="navbar-actions">
          <a href="/admin" class="back-btn ripple">
            <i class="fas fa-chevron-left"></i> Back to Dashboard
          </a>
        </div>
      </div>
    </div>
  </nav>
  
  <!-- Main Content -->
  <div class="main-content">
    <div class="container">
      <!-- Page Header -->
      <div class="page-header fade-in-up" style="animation-delay: 0.1s;">
        <div class="header-bg"></div>
        <h2 class="page-title">Order Management</h2>
        <p class="text-muted">View and manage all customer orders</p>
        
        <div class="breadcrumb-container">
          <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/admin"><i class="fas fa-home"></i> Dashboard</a></li>
              <li class="breadcrumb-item active">Orders</li>
            </ol>
          </nav>
        </div>
      </div>
      
      <!-- Filter Section -->
      <div class="filter-section fade-in-up" style="animation-delay: 0.2s;">
        <h3 class="filter-title"><i class="fas fa-filter me-2"></i> Filter Orders</h3>
        <div class="filter-options">
          <label class="custom-radio all-filter">
            <input type="radio" name="status-filter" value="all" checked>
            <span class="checkmark"></span>
            <span class="filter-label">All Orders</span>
          </label>
          <label class="custom-radio pending-filter">
            <input type="radio" name="status-filter" value="Pending">
            <span class="checkmark"></span>
            <span class="filter-label">Pending Orders</span>
          </label>
          <label class="custom-radio completed-filter">
            <input type="radio" name="status-filter" value="Completed">
            <span class="checkmark"></span>
            <span class="filter-label">Completed Orders</span>
          </label>
        </div>
      </div>
      
      <!-- Orders Container -->
      <div class="orders-container">
        <% if (orders && orders.length > 0) { %>
          <% orders.forEach((order, index) => { %>
            <div class="order-card fade-in-up" style="animation-delay: <%= 0.3 + (index * 0.1) %>s;" data-status="<%= order.status %>">
              <div class="card-header">
                <div class="order-id">
                  <div class="table-badge">
                    <i class="fas fa-chair"></i> Table <%= order.tableNumber %>
                  </div>
                  <h3 class="order-title">Order #<%= order._id.toString().substr(-6).toUpperCase() %></h3>
                </div>
                <div class="order-timestamp">
                  <i class="far fa-clock"></i>
                  <%= new Date(order.createdAt).toLocaleString() %>
                </div>
              </div>
              
              <div class="card-body">
                <div class="order-meta">
                  <div class="meta-item">
                    <span class="meta-label">Status</span>
                    <span class="status-badge status-<%= order.status.toLowerCase() %>">
                      <% if (order.status === 'Pending') { %>
                        <i class="fas fa-clock"></i>
                      <% } else { %>
                        <i class="fas fa-check-circle"></i>
                      <% } %>
                      <%= order.status %>
                    </span>
                  </div>
                  
                  <div class="meta-item">
                    <span class="meta-label">Customer Email</span>
                    <span class="meta-value">
                      <i class="fas fa-envelope"></i>
                      <%= order.email %>
                    </span>
                  </div>
                  
                  <div class="meta-item">
                    <span class="meta-label">Chef Type</span>
                    <span class="meta-value">
                      <% if (order.chefType === 'veg') { %>
                        <i class="fas fa-leaf" style="color: var(--success);"></i>
                      <% } else if (order.chefType === 'nonveg') { %>
                        <i class="fas fa-drumstick-bite" style="color: var(--danger);"></i>
                      <% } else { %>
                        <i class="fas fa-utensils" style="color: var(--accent);"></i>
                      <% } %>
                      <%= order.chefType.charAt(0).toUpperCase() + order.chefType.slice(1) %> Chef
                    </span>
                  </div>
                </div>
                
                <div class="order-items">
                  <h4 class="item-list-title">
                    <i class="fas fa-shopping-basket me-2"></i>
                    Ordered Items
                  </h4>
                  
                  <div class="item-list">
                    <% order.items.forEach(item => { %>
                      <div class="order-item">
                        <div class="item-details">
                          <span class="food-type-indicator food-type-<%= item.type %>"></span>
                          <span class="item-name"><%= item.name %></span>
                        </div>
                        <span class="item-price">₹<%= parseFloat(item.price).toFixed(2) %></span>
                      </div>
                    <% }) %>
                  </div>
                  
                  <div class="order-total">
                    <span class="total-label">Total Amount</span>
                    <span class="total-amount">₹<%= order.items.reduce((sum, item) => sum + parseFloat(item.price), 0).toFixed(2) %></span>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="empty-state fade-in-up" style="animation-delay: 0.3s;">
            <i class="fas fa-clipboard-list empty-icon"></i>
            <h3 class="empty-title">No Orders Found</h3>
            <p class="empty-description">There are currently no orders in the system. New orders will appear here once customers place them.</p>
          </div>
        <% } %>
      </div>
      
      <!-- Bottom Navigation -->
      <div class="bottom-nav fade-in-up" style="animation-delay: 0.5s;">
        <a href="/admin" class="back-btn ripple">
          <i class="fas fa-chevron-left"></i> Back to Dashboard
        </a>
      </div>
    </div>
  </div>
  
  <!-- Floating Action Button -->
  <div class="floating-action" id="scrollTopBtn" title="Scroll to top">
    <i class="fas fa-arrow-up floating-icon"></i>
  </div>
  
  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script>
    $(document).ready(function() {
      // Navbar scroll effect
      $(window).scroll(function() {
        if ($(this).scrollTop() > 50) {
          $('#adminNavbar').addClass('scrolled');
        } else {
          $('#adminNavbar').removeClass('scrolled');
        }
      });
      
      // Filter functionality with animation
      $('input[name="status-filter"]').change(function() {
        const value = $(this).val();
        $('.order-card').each(function() {
          if (value === 'all' || $(this).data('status') === value) {
            $(this).removeClass('filtered-out');
          } else {
            $(this).addClass('filtered-out');
          }
        });
      });
      
      // Scroll to top functionality
      $('#scrollTopBtn').click(function() {
        $('html, body').animate({scrollTop: 0}, 500);
      });
      
      // Show/hide scroll to top button based on scroll position
      $(window).scroll(function() {
        if ($(this).scrollTop() > 300) {
          $('#scrollTopBtn').fadeIn();
        } else {
          $('#scrollTopBtn').fadeOut();
        }
      });
      
      // Initialize with hidden button
      $('#scrollTopBtn').hide();
      
      // Ripple effect for buttons
      $('.ripple').on('click', function(e) {
        const x = e.clientX - e.target.getBoundingClientRect().left;
        const y = e.clientY - e.target.getBoundingClientRect().top;
        
        const ripple = document.createElement('span');
        ripple.style.left = `${x}px`;
        ripple.style.top = `${y}px`;
        
        this.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
    });
  </script>
</body>
</html>